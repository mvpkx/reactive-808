import {Dispatch, useEffect, useReducer} from 'react';
import reducer from '../features/drum-machine/reducer';
import {VOICE_NAMES} from '../constants';
import {ReducerAction, VoiceKey, Voices} from '../types/reducer';
import convertBpmToMs from '../utils/convert-bpm-to-sec';
import createIntitalState from '../utils/create-initial-state';
import accurateTimer from '../utils/timer';

export default function useDrumMachine(): [
  Dispatch<ReducerAction>,
  VoiceKey,
  Voices,
  boolean,
  number
] {
  const [{tempo, play, playhead, voices, volume, selector}, dispatch] = useReducer(
    reducer,
    null,
    createIntitalState
  );

  useEffect(() => {
    if (play) {
      const timer = accurateTimer(dispatch, {type: 'MOVE_PLAYHEAD'}, convertBpmToMs(tempo));
      return () => {
        timer.cancel();
      };
    }
  }, [play]);

  useEffect(() => {
    if (play) {
      VOICE_NAMES.forEach(name => {
        if (voices[name].pattern[playhead]) {
          // voices[name].source.mediaElement.volume = 0;
          // voices[name].source.mediaElement.pause();
          // voices[name].source.mediaElement.currentTime = 0;
          // voices[name].source.mediaElement.volume = voices[name].volume * volume;
          // voices[name].source.mediaElement.play().finally(() => {});
        }
      });
    }
  }, [playhead]);

  return [dispatch, selector, voices, play, playhead];
}
